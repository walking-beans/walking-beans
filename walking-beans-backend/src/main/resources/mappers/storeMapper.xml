<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="walking_beans.walking_beans_backend.mapper.StoreMapper">
    <!--매장 전체 불러오기 -->
    <select id="findAllStores">
        SELECT *
        FROM stores
    </select>

    <!--//매장 검색, KEYWORD 로 매장 이름, 설명, 메뉴 검색가능. -->
    <select id="searchStore">
        SELECT DISTINCT s.store_id, s.store_name, s.store_picture_url,
                        s.store_min_delivery_time, s.store_rating, s.store_review_count,
                        s.store_latitude, s.store_longitude, s.store_operation_hours, s.store_status
        FROM stores s
                 LEFT JOIN menu m ON s.store_id = m.store_id
        WHERE s.store_name LIKE CONCAT('%', #{keyword}, '%')
           OR s.store_description LIKE CONCAT('%', #{keyword}, '%')
           OR s.store_main_menu LIKE CONCAT('%', #{keyword}, '%')
           OR m.menu_name LIKE CONCAT('%', #{keyword}, '%')
           OR m.menu_description LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!--//특정 매장 불러오기, ID -->
    <select id="findStoresById">
        SELECT *
        FROM stores
        WHERE store_id = #{storeId}
    </select>

    <!--회원(업주) ID로 매장 불러오기 -->
    <select id="findStoresByuserId">
        SELECT *
        FROM stores
        WHERE user_id = #{userId}
    </select>

    <!--신규매장 등록하기
     `store_id` bigint(19) NOT NULL AUTO_INCREMENT,
`user_id` bigint(19) NOT NULL,
`store_name` varchar(255) NOT NULL,
`store_description` varchar(255) NULL,
`store_main_menu` varchar(255) NOT NULL,
`store_business_number` int(11) NOT NULL,
`store_phone` varchar(20) NOT NULL,
`store_picture_url` text NULL, - '매장로고'
`store_operation_hours` varchar(255) NOT NULL,
`store_closed_dates` varchar(255) NOT NULL,
`store_status` varchar(50) NULL, - '휴무, 운영 중'
`store_review_count` int(5) NOT NULL,
`store_rating` decimal(2,1) NOT NULL,
`store_min_delivery_time` int(3) NULL,
`store_max_delivery_time` int(3) NULL,
`store_delivery_tip` int(5) NOT NULL,
`store_delivery_address` varchar(255) NULL,
`store_address` varchar(255) NOT NULL,
`store_latitude` decimal(10,6) NOT NULL,
`store_longitude` decimal(10,6)	NOT NULL,
PRIMARY KEY (`store_id`),
CONSTRAINT `FK_Stores_Users` FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`)
     -->
    <insert id="addStore">
        INSERT INTO Stores
                            user_id,
                            store_name,
                            store_description,
                            store_main_menu,
                            store_business_number,
                            store_phone,
                            store_picture_url,
                            store_operation_hours,
                            store_closed_dates,
                            store_status,
                            store_min_delivery_time,
                            store_max_delivery_time,
                            store_delivery_tip,
                            store_delivery_address,
                            store_address,
                            store_latitude,
                            store_longitude
        VALUES

             #{userId},
             #{storeName},
             #{storeDescription},
             #{storeMainMenu},
             #{storeBusinessNumber},
             #{storePhone},
             #{storePictureUrl},
             #{storeOperationHours},
             #{storeClosedDates},
             #{storeStatus},
             #{storeMinDeliveryTime},
             #{storeMaxDeliveryTime},
             #{storeDeliveryTip},
             #{storeDeliveryAddress},
             #{storeAddress},
             #{storeLatitude},
             #{storeLongitude}

    </insert>

    <!--매장정보 수정하기 -->
    <update id="updateStore">
        UPDATE stores
        SET

                store_name = #{storeName},
                store_description = #{storeDescription},
                store_main_menu = #{storeMainMenu},
                store_business_number = #{storeBusinessNumber},
                store_phone = #{storePhone},

                store_operation_hours = #{storeOperationHours},
                store_closed_dates = #{storeClosedDates},

                store_min_delivery_time = #{storeMinDeliveryTime},
                store_max_delivery_time = #{storeMaxDeliveryTime},
                store_delivery_tip = #{storeDeliveryTip},
                store_delivery_address = #{storeDeliveryAddress},
                store_address = #{storeAddress},
                store_latitude = #{storeLatitude},
                store_longitude = #{storeLongitude},

                store_picture_url = #{storePictureUrl}

        WHERE store_id = #{storeId}

    </update>

    <!-- 가게 정보(메뉴,메뉴옵션,가게) 조작 권한 검증-->
    <select id="getStoreIdByUserId">
        SELECT store_id AS storeId
        FROM stores
        WHERE user_id = #{userId}
    </select>

    <!--매장정보 삭제하기 -->
    <delete id="deleteStores">
        DELETE
        *
        FROM stores

    </delete>

    <!-- **************************************** LEO **************************************** -->
    <select id="getStoreAddressByOrderId">
        SELECT S.store_id, S.user_id, S.store_name, S.store_description, S.store_main_menu, S.store_business_number, S.store_phone, S.store_picture_url, S.store_operation_hours, S.store_closed_dates, S.store_review_count, S.store_rating, S.store_min_delivery_time, S.store_max_delivery_time, S.store_delivery_tip, S.store_delivery_address, S.store_address, S.store_latitude, S.store_longitude
        FROM stores S
                 JOIN orders O
                      on S.store_id = O.store_id
        WHERE O.order_id = #{orderId}
    </select>

    <select id="getStoreInfoInRiderMain">
        SELECT S.store_name, O.user_id, O.order_id, S.store_latitude, S.store_longitude, S.store_address, S.store_phone, DATE_FORMAT(O.order_create_date, '%p %h:%i') AS order_create_date, S.store_operation_hours, S.store_closed_dates, S.store_status, S.store_delivery_tip, S.store_max_delivery_time, S.store_picture_url
        FROM stores S
                 JOIN orders O
                      on O.store_id = S.store_id
        WHERE O.rider_id_on_duty IS NULL
    </select>
    <!-- ************************************************************************************* -->

    <!--사용자 위치 기준 반경 10km 내의 매장 조회 -->
    <select id="findNearbyStores">
        SELECT * FROM (
        SELECT s.*,
        (6371 * acos(cos(radians(#{lat})) * cos(radians(s.store_latitude))
        * cos(radians(s.store_longitude) - radians(#{lng}))
        + sin(radians(#{lat})) * sin(radians(s.store_latitude)))) AS distance
        FROM Stores s
        ) AS store_distance
        WHERE <![CDATA[ distance <= #{radius} ]]>  <!--  `<![CDATA[]]>` 사용 xml 파일에서 < 는 태그표시로 오해받음 -->
        ORDER BY distance ASC;
    </select>
</mapper>