import React, {useEffect, useRef, useState} from "react";
import { useLocation, useNavigate } from "react-router-dom";
import "../../css/User.css";
import userCurrentLocation from "../../images/rider/userCurrentLocation.svg";
import axios from "axios";

const KAKAO_MAP_API_KEY = "1cfadb6831a47f77795a00c42017b581";

const UserSearchMap = () => {
    const location = useLocation();
    const { lat, lng, searchResults = [] } = location.state || {};
    const mapRef = useRef(null);
    const [stores, setStores] = useState([]);
    const [selectedStore, setSelectedStore] = useState(null);
    const markersRef = useRef([]);
    const navigate = useNavigate();
    const infoWindowsRef = useRef([]);


    const preventClose = (e) => {
        // 2. Ìï¥Îãπ Ìï®Ïàò ÏïàÏóê ÏÉàÎ°úÏö¥ Ìï®ÏàòÎ•º ÏÉùÏÑ±ÌïòÎäîÎç∞, Ïù¥Îïå Ïù¥ Ìï®ÏàòÎäî ÏûêÎ∞îÏä§ÌÅ¨Î¶ΩÌä∏Ïùò Ïù¥Î≤§Ìä∏Î•º Í∞êÏßÄÌïòÍ≤åÎêúÎã§.
        e.preventDefault();
        // 2-1. ÌäπÏ†ï Ïù¥Î≤§Ìä∏Ïóê ÎåÄÌïú ÏÇ¨Ïö©Ïûê ÏóêÏù¥Ï†ÑÌä∏ (Î∏åÎùºÏö∞Ï†Ä)Ïùò Í∏∞Î≥∏ ÎèôÏûëÏù¥ Ïã§ÌñâÎêòÏßÄ ÏïäÎèÑÎ°ù ÎßâÎäîÎã§.
        e.returnValue = '';
        // 2-2. e.preventDefaultÎ•º ÌÜµÌï¥ÏÑú Î∞©ÏßÄÎêú Ïù¥Î≤§Ìä∏Í∞Ä Ï†úÎåÄÎ°ú ÎßâÌòîÎäîÏßÄ ÌôïÏù∏Ìï† Îïå ÏÇ¨Ïö©ÌïúÎã§Í≥† ÌïúÎã§.
        // 2-3. Îçî Ïù¥ÏÉÅ Ïì∞Ïù¥ÏßÄ ÏïäÏßÄÎßå, chrome ÏÑ§Ï†ïÏÉÅ ÌïÑÏöîÌïòÎã§Í≥† ÌïòÏó¨ Ï∂îÍ∞ÄÌï®.
        // 2-4. returnValueÍ∞Ä trueÏùº Í≤ΩÏö∞ Ïù¥Î≤§Ìä∏Îäî Í∑∏ÎåÄÎ°ú Ïã§ÌñâÎêòÍ≥†, falseÏùº Í≤ΩÏö∞ Ïã§ÌñâÎêòÏßÄ ÏïäÎäîÎã§Í≥† ÌïúÎã§.
        navigate("/");
    };

// Î∏åÎùºÏö∞Ï†ÄÏóê Î†åÎçîÎßÅ Ïãú Ìïú Î≤àÎßå Ïã§ÌñâÌïòÎäî ÏΩîÎìú
    useEffect(() => {
        (() => {
            window.addEventListener('beforeunload', preventClose);
            // 4. beforeunload Ïù¥Î≤§Ìä∏Îäî Î¶¨ÏÜåÏä§Í∞Ä ÏÇ¨ÎùºÏßÄÍ∏∞ Ï†Ñ window ÏûêÏ≤¥ÏóêÏÑú Î∞úÌñâÌïúÎã§.
            // 4-2. windowÏùò Ïù¥Î≤§Ìä∏Î•º Í∞êÏßÄÌïòÏó¨ beforunload Ïù¥Î≤§Ìä∏ Î∞úÏÉù Ïãú preventClose Ìï®ÏàòÍ∞Ä Ïã§ÌñâÎêúÎã§.
        })();

        return () => {
            window.removeEventListener('beforeunload', preventClose);
            // 5. Ìï¥Îãπ Ïù¥Î≤§Ìä∏ Ïã§Ìñâ ÌõÑ, beforeunloadÎ•º Í∞êÏßÄÌïòÎäî Í≤ÉÏùÑ Ï†úÍ±∞ÌïúÎã§.
        };
    });

// Ïπ¥Ïπ¥Ïò§ ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî
    useEffect(() => {
        if (!lat || !lng) return;

        const script = document.createElement("script");
        script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${KAKAO_MAP_API_KEY}&libraries=services&autoload=false`;
        script.async = true;
        document.head.appendChild(script);

        script.onload = () => {
            window.kakao.maps.load(() => {
                const mapContainer = document.getElementById("search-map");
                if (!mapContainer) return;

                const mapOption = {
                    center: new window.kakao.maps.LatLng(lat, lng),
                    level: 5,
                };
                const newMap = new window.kakao.maps.Map(mapContainer, mapOption);
                mapRef.current = newMap;

                //  ÏÇ¨Ïö©Ïûê ÏúÑÏπò ÎßàÏª§ Ï∂îÍ∞Ä
                const userMarkerImage = new window.kakao.maps.MarkerImage(
                    userCurrentLocation,
                    new window.kakao.maps.Size(40, 42),
                    { offset: new window.kakao.maps.Point(20, 42) }
                );

                new window.kakao.maps.Marker({
                    position: new window.kakao.maps.LatLng(lat, lng),
                    map: newMap,
                    title: "ÎÇ¥ ÏúÑÏπò",
                    image: userMarkerImage,
                });

                //  ÏßÄÎèÑ ÏÉùÏÑ± ÌõÑ Ï£ºÎ≥Ä Îß§Ïû• Îç∞Ïù¥ÌÑ∞ ÏöîÏ≤≠
                fetchNearbyStores(lat, lng);
            });
        };

        return () => {
            document.head.removeChild(script);
        };
    }, [lat, lng]); // `mapRef.current` Ï†úÍ±∞

    //  Ï£ºÎ≥Ä Îß§Ïû• Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ (ÏßÄÎèÑ Î°úÎìú ÌõÑ Ïã§Ìñâ)
    const fetchNearbyStores = (lat, lng) => {
        axios.get(`http://localhost:7070/api/store/nearby?lat=${lat}&lng=${lng}`)
            .then((res) => {
                console.log(" Ï£ºÎ≥Ä Îß§Ïû• Îç∞Ïù¥ÌÑ∞:", res.data);
                setStores(res.data); //  Îß§Ïû• Îç∞Ïù¥ÌÑ∞ ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏
            })
            .catch((error) => console.error("Îß§Ïû• Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïò§Î•ò:", error));
    };

    // Í∏∞Ï°¥ ÎßàÏª§Î•º ÏßÄÎèÑÏóêÏÑú ÏÇ≠Ï†úÌïòÎäî Ìï®Ïàò
    const clearMarkers = () => {
        markersRef.current.forEach(marker => marker.setMap(null));
        markersRef.current = [];
    };

    //  ÏßÄÎèÑÏóê Îß§Ïû• ÎßàÏª§ ÌëúÏãú
    useEffect(() => {
        if (!mapRef.current) return;

        clearMarkers(); //  Í∏∞Ï°¥ ÎßàÏª§ ÏÇ≠Ï†ú

        const displayStores = searchResults.length > 0 ? searchResults : stores;
        console.log("üó∫Ô∏è ÏßÄÎèÑÏóê ÌëúÏãúÌï† Îß§Ïû• Î™©Î°ù:", displayStores);

        displayStores.forEach((store) => {
            const marker = new window.kakao.maps.Marker({
                position: new window.kakao.maps.LatLng(store.storeLatitude, store.storeLongitude),
                map: mapRef.current,
            });

            const infoWindow = new window.kakao.maps.InfoWindow({
                content: `<div style="padding:5px; font-size:12px; background:#fff; border-radius:5px;">${store.storeName}</div>`,
            });

            // ‚úÖ ÎßàÏª§Ïóê ÎßàÏö∞Ïä§Î•º Ïò¨Î¶¨Î©¥ Îß§Ïû• Ïù¥Î¶Ñ ÌëúÏãú
            window.kakao.maps.event.addListener(marker, "mouseover", () => {
                infoWindow.open(mapRef.current, marker);
            });

            window.kakao.maps.event.addListener(marker, "mouseout", () => {
                infoWindow.close();
            });

            //  ÎßàÏª§ ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ (Í∏∞Ï°¥ infoWindow Îã´Í≥† ÏÉà infoWindow Ïó¥Í∏∞)
            window.kakao.maps.event.addListener(marker, "click", () => {
                infoWindow.close(); // ÌÅ¥Î¶≠ Ïãú Îß§Ïû•Ïù¥Î¶Ñ ÏÇ¨ÎùºÏßÄÍ≤å ÏÑ§Ï†ï
                setSelectedStore(store);
                mapRef.current.panTo(new window.kakao.maps.LatLng(store.storeLatitude, store.storeLongitude));
            });

            markersRef.current.push(marker);
            infoWindowsRef.current.push(infoWindow);
        });

    }, [searchResults, stores]); // ‚úÖ storesÍ∞Ä Î≥ÄÍ≤ΩÎê† Îïå Ïã§Ìñâ

    // ‚úÖ Îß§Ïû• ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Î≥¥Í∏∞
    const handleStore = () => {
        if (!selectedStore?.storeId) return;
        navigate(`/user/order/${selectedStore.storeId}`);
    };


    return (
        <div>
            <div id="search-map" style={{ width: "100%", height: "500px" }}></div>
            {selectedStore && (
                <div className="store-info">
                    <h3 onClick={handleStore} className="cursor-pointer text-primary fw-bold">
                        {selectedStore.storeName}
                    </h3>
                    <img className="store-picture" src={selectedStore.storePictureUrl} alt="Îß§Ïû• Ïù¥ÎØ∏ÏßÄ" />
                    <p>ÌèâÏ†ê: ‚òÖ {selectedStore.storeRating} ({selectedStore.storeReviewCount} Î¶¨Î∑∞)</p>
                    <p>{selectedStore.storeStatus} : {selectedStore.storeOperationHours}</p>
                </div>
            )}
        </div>
    );
};

export default UserSearchMap;